const express = require("express");

const router = express.Router();

var MLPClassifier = function(hidden, output, layers, weights, bias) {

  this.hidden = hidden.toUpperCase();
  this.output = output.toUpperCase();
  this.network = new Array(layers.length + 1);
  for (var i = 0, l = layers.length; i < l; i++) {
      this.network[i + 1] = new Array(layers[i]).fill(0.);
  }
  this.weights = weights;
  this.bias = bias;

  var compute = function(activation, v) {
      switch (activation) {
          case 'LOGISTIC':
              for (var i = 0, l = v.length; i < l; i++) {
                  v[i] = 1. / (1. + Math.exp(-v[i]));
              }
              break;
          case 'RELU':
              for (var i = 0, l = v.length; i < l; i++) {
                  v[i] = Math.max(0, v[i]);
              }
              break;
          case 'TANH':
              for (var i = 0, l = v.length; i < l; i++) {
                  v[i] = Math.tanh(v[i]);
              }
              break;
          case 'SOFTMAX':
              var max = Number.NEGATIVE_INFINITY;
              for (var i = 0, l = v.length; i < l; i++) {
                  if (v[i] > max) {
                      max = v[i];
                  }
              }
              for (var i = 0, l = v.length; i < l; i++) {
                  v[i] = Math.exp(v[i] - max);
              }
              var sum = 0.0;
              for (var i = 0, l = v.length; i < l; i++) {
                  sum += v[i];
              }
              for (var i = 0, l = v.length; i < l; i++) {
                  v[i] /= sum;
              }
              break;
      }
      return v;
  };

  this.predict = function(neurons) {
      this.network[0] = neurons;

      for (var i = 0; i < this.network.length - 1; i++) {
          for (var j = 0; j < this.network[i + 1].length; j++) {
              this.network[i + 1][j] = this.bias[i][j];
              for (var l = 0; l < this.network[i].length; l++) {
                  this.network[i + 1][j] += this.network[i][l] * this.weights[i][l][j];
              }
          }
          if ((i + 1) < (this.network.length - 1)) {
              this.network[i + 1] = compute(this.hidden, this.network[i + 1]);
          }
      }
      this.network[this.network.length - 1] = compute(this.output, this.network[this.network.length - 1]);

      if (this.network[this.network.length - 1].length == 1) {
          if (this.network[this.network.length - 1][0] > .5) {
              return 1;
          }
          return 0;
      } else {
          var classIdx = 0;
          for (var i = 0, l = this.network[this.network.length - 1].length; i < l; i++) {
              classIdx = this.network[this.network.length - 1][i] > this.network[this.network.length - 1][classIdx] ? i : classIdx;
          }
          return classIdx;
      }

  };

};

router.get("/", function(req, res) {
  // Features:
  // var features = [0.7194016271172096,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,10.0,5];
  var features = [0.5170303465158486,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,21.0,0];

  var clase = ["Amenaza","Homicidio","Hurto","Hurto_Vehi","Hurto_Moto","Lesiones_acc"]

  // Parameters:
  // const layers = [5, 4, 6];
  // const weights = [[[0.09683875594596138, 0.13955216642671686, -0.004831257794160661, 0.6570313803933325, 0.22543003735009765], [-0.03992266243101807, 0.6601342602210881, -0.3442934513731299, -0.0991338976816946, 0.14322793841307066], [-0.5677250243625583, 0.5182751073501644, -0.34533400381904905, 0.03986707146599575, -0.11691117965417151], [-0.3680573410085075, 0.12129133286544987, -0.45901480720925364, -0.08585258406177292, -0.17529146417074246], [-0.3119365976993796, 0.27974496432078727, -0.5360327511536163, -0.14493346774684587, 0.01179430853041252], [-0.5244428083176443, 0.23510006642829998, -0.48981058829212576, 0.12053115412090881, 0.35033401675774156], [-0.06243396999891413, 0.14525242610515582, -0.35479019985232757, -0.15466301213217587, 0.29016913201228234], [-0.124594055773011, 0.19587092239170117, -0.6744555304653526, 0.0008471700527127835, 0.025726254900353202], [0.0915814817214987, 0.0957409880508991, 0.21268690937711418, -0.01687983796777413, -0.18124295566444087], [-1.0545162271449227, 1.07206660093791, -0.16678148736301687, -0.2616199295034542, 0.1901893327348636], [-0.6453050372787767, 0.8483577525647894, -0.0010228391610620198, -0.390984782957983, -0.0006637810085799418], [0.48069999991277007, 0.5307495277719193, -1.150616678935308, 0.43494718122068093, -0.24366257172029424], [-0.28912738311997616, 0.12645469108211294, -0.38854641829546893, -0.1683684328937006, 0.05285414373716967], [0.06268824180430775, -0.014493183655775664, 0.10858638295077018, -0.08178718323522943, 0.32155300248197966], [-0.02489817656960044, -0.02502851498878799, -0.30594766100086435, 0.26405358510092464, 0.1210429046308239], [0.23503280125085962, 0.21142791839596134, 0.3477442859342451, -0.16506107836221803, -0.005619583912757454], [-0.26688394496719925, 0.2659312261322582, -0.12216542836671948, 0.37789105511558685, -0.2159839737591268], [0.09177281688785495, -0.10199182611477292, -0.0938722683368008, 0.19203243858332228, 0.23180068306719748], [-0.27557718791516694, -0.35858110804478166, 0.2451376396753875, 0.14893012709162667, 0.1002301636056568], [-0.14624183355383594, -0.32811731466670624, -0.03507383442659032, 0.16144005996892674, -0.19992681098658657], [0.31513636410715623, -0.1248018906463104, -0.31917432373425986, 0.23328390149480258, -0.32260172054259834], [0.19122661095623322, -0.259264381878671, -0.1706888510788007, -0.045946927401994846, -0.17883703412887325], [0.35782631002561666, 0.07387766895907052, 0.0018351092314587865, -0.15453863945877105, 0.3169219149728048], [0.09736886042041186, 0.024226005858367972, 0.2058545008943415, 0.024218596233971684, -0.14724760891710761], [0.2935421643651503, -0.014371528781393026, -0.13208832794126726, -0.28851427814627745, 0.31229687248296867], [-0.05878095482332587, 0.2010799473546681, -0.0993239303977421, -0.36374130376619973, -0.10390512875043066], [-0.3638894174134053, 0.24823022759739236, 0.35756280055745404, 0.3161389307487708, 0.06800405499534964], [-0.17999477071232264, 0.914206457241969, -2.0384440164452853, 0.5199594393753192, -0.10637382132783658], [-0.06287809981010109, -0.11878006735535517, -0.09201267113999129, -0.015540835345834659, 0.34144413668321094], [0.27919416358592447, -0.34244818621668677, 0.12888247068635483, 0.2790712788778558, -0.15159311506268625], [-0.2563635395706565, -0.10577269500886423, 0.2843847209963774, -0.27100746951698423, 0.038671251860931066], [0.01742338773266033, -0.3221338874213334, 0.08309106630411023, -0.23884771393496756, 0.31316857296361306], [-0.07156275338444604, -0.7806994769427418, 1.2468637846289474, 0.2583484216833918, -0.15448470604195297], [-0.23757481720956494, -0.22886794585356013, 1.1118712473054688, 0.3914896085229147, -0.26983275117669503], [-0.25014280321476956, 0.33433083760525445, -0.1548076788073014, -0.0663289479662007, 0.08757456191416864], [0.06350374508081867, 1.3450313695416365, -1.6679274058962077, 0.003339074284405499, 0.19675625658339801], [-1.2676037547461227, 0.9231343712926577, -0.630850259510478, -0.6216136411112253, 0.20731088956855878], [0.1529443756038818, -0.08286967322959174, -0.32909902457803475, -0.17358741477544273, 0.10940310776706465], [0.7046027417976485, 1.3395824233604137, 0.24830176106316298, 0.08370281013984324, -0.19104372314381887], [1.6703088171753602, -2.3235474702997165, 0.12059064516298312, 2.7086027799159407, 0.10827128826653942]], [[2.1644581890130503, 0.13353208160229882, 0.21350496278266862, 0.6480630163998986], [-1.3954067764024347, -0.5832179850511183, 0.4758692987236252, -0.8055322211610434], [1.589257849639544, -0.27087730289150785, -1.9712496115182507, 2.4389530246195736], [2.8648431679576913, -0.08547149064479252, 1.10529674028971, 0.3635761352583198], [-0.31351253137424484, 0.21369878794531064, -0.035922291952595574, -0.2771337942546268]], [[-5.915860276800064, -3.404797840361064, -1.0238492771791876, 2.521594120122528, 1.9410799903040064, 2.9970113310828], [-0.15576885725494014, -0.1435983838787508, 0.42533471253356236, 0.001228440836543644, 0.22180562530274794, -0.6132632435857919], [2.395758402340087, 2.0798305378910813, 1.0122777720118277, -2.185602988452941, -1.4820667319473928, -3.2308231083717023], [-1.9045007147566257, -1.5881271194785345, 1.3832521211396942, -1.5115236902161429, -0.16730623867114794, 1.3206824015949032]]];
  // const bias = [[-1.4031563740888433, 1.9680829696242415, -2.1684772482193733, -0.4220886432746997, -0.04151573480199159], [-0.9909943334895941, -0.07782299613645761, 1.679994090291464, -0.5426117221008456], [-0.24727078977778846, 2.8118195401093735, 2.3101409843375795, -0.3449147698337949, -1.083636832385673, -2.770636214185344]];


  const layers = [5, 4, 6];
  const weights = [[[-0.8059715509974685, -0.14896820725710863, -0.17608487582605503, 0.04666313567425662, 0.8494074935188388], [-0.43548625405147845, -0.21861874354795446, 0.12321853758708286, -0.019740665214351385, 0.7897047036862931], [-0.3119799495524076, 0.018982709325166335, -0.1528526071052257, 0.10739204175915203, 0.7611979843483334], [-1.4971441043061977, 0.557365641745927, -0.2942332320664479, -0.16027349232226745, 0.9826177771874848], [-0.1697954540635221, 0.2332428830520101, -0.11086829539287871, 0.19050094115046956, 0.2193128048241041], [-0.07607077138028497, 0.15339549701395755, -0.12539225843982865, -0.10904049490312127, 0.39511650482967386], [-0.21731159954224438, -0.18839382240562028, -0.031940627096486526, -0.304181366680092, 0.35375962948557765], [-0.1752284352838353, 0.3607301698891477, -0.24415616421913477, 0.08212994598596986, 0.2479579957596311], [0.5029088898478846, -0.28171337529991736, 0.13250653117672284, 0.46340813897524064, 0.4394860159277256], [-1.3746510114502877, 1.129600705077749, -0.21474814300785977, -0.5395192977951662, 0.7343628968963773], [-1.2897890644309173, -0.2947608690569473, 0.20348546302368178, -0.2964109756450337, 1.4653911271955684], [-0.2594143561737298, 0.4881885287880956, 0.3508360965294609, -0.2703513272757969, -0.003240868628938554], [-0.5860156167333288, 0.31117419894975723, -0.06615670352760507, 0.12387431905515511, 0.712230875991865], [0.26557985169357884, -0.12658314332250056, 0.23094994639621774, 0.1701001997090529, 0.20424796183084043], [0.3577730503036807, -0.23860732677330945, -0.2432225236767659, -0.31934919217107843, -0.003752717217135553], [0.1801414704707725, -0.27253691188106205, -0.06323905719556416, 0.0370669377059371, -0.24819527506522238], [0.19979769363490188, 0.0984053360472287, 0.20551498516030664, -0.022640660892212564, -0.22839052628238982], [-0.33101945292453333, 0.16772860576966855, -0.2503530810435432, 0.23460114912848934, 0.06452194075102055], [-0.11883148748065916, 0.23728234246535634, -0.06433189514421496, -0.3427042158371057, 0.09186604085133439], [0.08960485979532626, -0.33470160786138353, 0.3028043517875859, 0.11515685245290358, 0.2731064729153738], [0.10407085717099432, 0.23547095832727738, -0.18468053993952102, -0.339702968121549, 0.3034909641215601], [0.08975503913204608, 0.22807524692883524, 0.34384926003050525, 0.28473622491586525, -0.25481234480962894], [0.2979196492321123, -0.20735154546791074, -0.29132747083335325, -0.13594529736055108, 0.19654464407041353], [0.20197344366822642, 0.06610709788755358, -0.002065017750919436, 0.0033133600761584042, -0.021649584034799253], [-0.2836653701921953, 0.059586683219731214, -0.004644480869625417, 0.06684463640889003, -0.3586137317275975], [-0.21064923216261525, 0.0638146936237569, 0.11032401603579813, -0.026230879896163527, 0.24706145525435558], [-0.14870153035256736, 0.23759935184995298, 0.30793877037442335, -0.1418958375613181, 0.11251296653362149], [-0.5433708209851448, 2.9214533134625578, 0.18334282686502565, -1.7430046011008138, -4.1600721939665135], [-0.2037963593228212, 0.07598357303739926, -0.17091584675171964, 0.3128380291345445, 0.0029580439503576034], [0.21911275548664338, 0.2198180422278743, -0.014954134605222725, -0.03765725311984003, -0.10423903674341883], [0.08827923829432968, -0.22099296158662646, 0.06410826118484006, -0.14420162087040747, -0.057637150286757394], [0.042918641662011835, -0.2193362409697892, 0.030710751919966004, 0.15226135235087485, -0.060519901019199636], [0.3805124068057912, -1.6436483493831293, 0.14359530360511466, 0.8378413635398566, 2.1823210856975575], [0.580072725898775, -1.3829769649432102, -0.05591985543232205, 0.7771578559639046, 2.1581296141497335], [-0.12082229842609556, 0.26030457521086015, 0.31588770634304336, 0.2886048629372152, -0.0016520753587118452], [-2.0802029933049027, 1.1403206211831012, -0.2504670940400359, -0.28204790673281543, 1.6738905749962023], [-0.5540854224664338, 0.1098660482964575, -0.3370359132674931, -0.3496329913064935, 1.5355627403421293], [-0.2593101710521571, 0.039456875769337485, 0.20313179152206265, -0.26426530893334804, 0.28722208015499806], [-1.1422232465236872, 4.8205200080352135, -0.7877981017319817, 3.768148360475078, 0.7287951409847189], [3.3333939254757814, -1.6208421409171114, 0.04747454887176793, 1.415762371845344, -3.17046609689973]], [[-1.6495135847905136, -0.5459932020962959, -1.2798311563680334, 1.713586502626841], [2.0365864278604167, -0.8004842743075382, -0.30529441460201984, 1.4551724060142626], [0.7183913202778479, -0.5992970976841243, 0.050945682956965166, 0.09330730512101518], [-3.5989539629745324, -0.29762481867138507, -2.00107236364536, -1.2481660805324233], [4.951935610450184, -0.6154671372860807, -0.887688071307704, -3.159977247234994]], [[3.370440676148736, 2.3510506932976645, -2.547576266301239, -0.37499124075045553, -0.8713787270643487, -1.470726311449589], [-0.2579277645358974, -0.7271488701384506, -0.009632568964908245, 0.2703321968287061, -0.25135427266542615, 0.20302131222995318], [0.006310862331803521, -0.3391430257555299, 0.3925278341307983, -0.3648405011644786, -0.05582449131457693, 0.33196117648451556], [-0.02591376984468102, -0.8602693961182831, -3.327359762025045, 1.6457871546128395, 1.5351815766664298, 1.3127812709273945]]];
  const bias = [[-2.3595882098369594, 0.8350378995279503, -0.18161275727680867, -0.40064885023650926, 3.218682502967455], [2.2503105410523023, -0.6860902193988101, -0.5677692276958485, -0.30955128553774497], [-14.594524974934668, 1.4772376316261882, 8.057661897697225, -0.1367670626791799, 0.8023819024987912, 3.5939837574411224]];
  // Prediction:
  var clf = new MLPClassifier('relu', 'softmax', layers, weights, bias);
//   var prediction = clf.predict(features);
//   console.log(prediction+" "+clase[prediction]);
  res.render("home/index");
});

router.post("/", function(req, res){
    console.log(req.body);      // your JSON
    console.log(0.0000105516397248132*(parseInt(req.body.datas)-5001))
    res.send(req.body);    // echo the result back
})

module.exports = router;
